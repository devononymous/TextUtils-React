{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","contactUs","onClick","toggleMode","role","htmlFor","redMode","greenMode","blueMode","Textform","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","trim","split","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ba0d759.chunk.js","sourcesContent":[" import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link }  from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.contactUs}</a>\r\n              </li>\r\n              \r\n            </ul>\r\n          \r\n            {/* <form className=\"d-flex\"> \r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label mx-1\" htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n</div>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'red':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.redMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Redmode</label>\r\n</div>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'green':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.greenMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable green mode</label>\r\n</div>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'#0040ff':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.blueMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable blue mode</label>\r\n</div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\naboutText: PropTypes.string}//used incase we send numbers instead of string\r\n\r\n\r\nNavbar.defaultProps = {title: 'Set title here', aboutText: 'About'};","import React, {useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState(\" \");\r\n    // text = \"new text\"; // wrong way to change the state here\r\n    // setText = \"new text\"; // wrong way to change the state here\r\n    const handleUpClick = () => {\r\n        console.log(text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase !\",\"success\")\r\n    }\r\n    const handleloClick = () => {\r\n        console.log(text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase !\",\"success\")\r\n    }\r\n    \r\n    const handlespaces =()=>{\r\n        console.log(text);\r\n        let newText = text.trim();\r\n        setText(newText)\r\n        props.showAlert(\"Text trimmed !\",\"success\")\r\n    }\r\n    \r\n    const handleOnChange = (event) => {\r\n        console.log(\"OnChange\");\r\n        setText(event.target.value)\r\n    }\r\n   \r\n \r\n  \r\n    return ( \r\n     <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'#04020d'}} >\r\n     <h1> {props.heading} </h1> \r\n    <div className = \"mb-3\" >\r\n        <textarea className = \"form-control\" value={text}  style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'#04020d' }} onChange={handleOnChange} id = \"exampleFormControlTextarea1\" rows = \"8\" > </textarea> \r\n        </div>  \r\n        <button className = \"btn btn-primary mx-2\" onClick={handleUpClick} > Convert to Uppercase </button> \r\n        <button className = \"btn btn-primary\" onClick={handleloClick} > Convert to Lowercase </button> \r\n        <button className = \"btn btn-primary mx-2\" onClick={handlespaces}  > Trim sentence</button> \r\n\r\n        </div>\r\n\r\n        <div className=\"container my-4\"  style={{color:props.mode==='dark'?'white':'#04020d'}} >\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length } words and {text.length} characters</p>\r\n            <p>{ 0.008 * text.split(\" \").length} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}  ","import React from 'react'\r\n\r\n function Alert(props) {\r\n     const capitalize =(word)=>{\r\n         const lower = word.toLowerCase();\r\n         return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n     }\r\n    return (\r\n        props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong> {capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport Textform from './components/Textform.js'\n// import About from './components/About.js'\nimport React, { useState } from 'react'\nimport Alert from './components/Alert.js'\n// import {BrowserRouter as Router,Switch, Route, } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');// whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n   setTimeout(() => {\n     setAlert(null);\n   }, 2000);\n  }\n\n \n  const toggleMode =()=>{\n    if (mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor= 'black';\n    showAlert(\"Dark mode has been enabled\", \"success\");\n    document.title = \"TextUtils - Dark Mode\";\n    // setInterval(() => {\n    //   document.title = \"TextUtils - Dark Mode\";\n    // }, 2000);\n    // setInterval(() => {\n    //   document.title = \" Install TextUtils Now\";\n    // }, 1100);\n    \n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor= 'white';\n    showAlert(\"Light mode has been enabled\", \"success\");\n    document.title = \"TextUtils - Light Mode\"\n    \n  }\n}\n\n\nconst greenMode =()=>{\n  if (mode === 'light'){\n  setMode('dark');\n  document.body.style.backgroundColor= 'green';\n  showAlert(\"Dark mode has been enabled\", \"success\");\n  \n}\nelse{\n  setMode('light');\n  document.body.style.backgroundColor= 'white';\n  showAlert(\"Light mode has been enabled\", \"success\");\n  \n}}\nconst blueMode =()=>{\n  if (mode === 'light'){\n  setMode('dark');\n  document.body.style.backgroundColor= '#0040ff';\n  showAlert(\"Dark mode has been enabled\", \"success\");\n  \n}\nelse{\n  setMode('light');\n  document.body.style.backgroundColor= 'white';\n  showAlert(\"Light mode has been enabled\", \"success\");\n}\n}\nconst redMode =()=>{\n  if (mode === 'light'){\n  setMode('red');\n  document.body.style.backgroundColor= 'red';\n  showAlert(\"Dark mode has been enabled\", \"success\");\n  \n}\nelse{\n  setMode('light');\n  document.body.style.backgroundColor= 'white';\n  showAlert(\"Light mode has been enabled\", \"success\");\n  }\n}\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" contactUs=\"Contact us\"/> */}\n    {/* <Navbar /> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode= {mode} redMode={redMode} greenMode={greenMode} blueMode={blueMode} toggleMode={toggleMode} />\n    <Alert   alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route  exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <Textform showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n          {/* </Route>  */}\n    {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}